# -*- coding: utf-8 -*-
"""Question3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xLG5-EW_JVOdX58yNWM3rFOT-yzSNNvx
"""

!gdown 1jfSKBXJwvH7tfDRvTYO-CMc91XFhQch1

from google.colab import drive
drive.mount('/content/drive')

!unzip Project1_data.zip

import pandas as pd
import numpy as np

Year98R = pd.read_excel("R98.xlsx", sheet_name='R98P1')
Year98U = pd.read_excel("U98.xlsx", sheet_name='U98P1')
Year99R = pd.read_excel("R99.xlsx", sheet_name='R99P1')
Year99U = pd.read_excel("U99.xlsx", sheet_name='U99P1')
Year400R = pd.read_excel("R1400.xlsx", sheet_name='R1400P1')
Year400U = pd.read_excel("U1400.xlsx", sheet_name='U1400P1')
Year401R = pd.read_excel("R1401.xlsx", sheet_name='R1401P1')
Year401U = pd.read_excel("U1401.xlsx", sheet_name='U1401P1')

Year98R_P4S01 = pd.read_excel("R98.xlsx", sheet_name='R98P4S01')
Year98R_P4S02 = pd.read_excel("R98.xlsx", sheet_name='R98P4S02')
Year98R_P4S03 = pd.read_excel("R98.xlsx", sheet_name='R98P4S03')
Year98U_P4S01 = pd.read_excel("U98.xlsx", sheet_name='U98P4S01')
Year98U_P4S02 = pd.read_excel("U98.xlsx", sheet_name='U98P4S02')
Year98U_P4S03 = pd.read_excel("U98.xlsx", sheet_name='U98P4S03')

Year99R_P4S01 = pd.read_excel("R99.xlsx", sheet_name='R99P4S01')
Year99R_P4S02 = pd.read_excel("R99.xlsx", sheet_name='R99P4S02')
Year99R_P4S03 = pd.read_excel("R99.xlsx", sheet_name='R99P4S03')
Year99U_P4S01 = pd.read_excel("U99.xlsx", sheet_name='U99P4S01')
Year99U_P4S02 = pd.read_excel("U99.xlsx", sheet_name='U99P4S02')
Year99U_P4S03 = pd.read_excel("U99.xlsx", sheet_name='U99P4S03')

Year400R_P4S01 = pd.read_excel("R1400.xlsx", sheet_name='R1400P4S01')
Year400R_P4S02 = pd.read_excel("R1400.xlsx", sheet_name='R1400P4S02')
Year400R_P4S03 = pd.read_excel("R1400.xlsx", sheet_name='R1400P4S03')
Year400U_P4S01 = pd.read_excel("U1400.xlsx", sheet_name='U1400P4S01')
Year400U_P4S02 = pd.read_excel("U1400.xlsx", sheet_name='U1400P4S02')
Year400U_P4S03 = pd.read_excel("U1400.xlsx", sheet_name='U1400P4S03')

Year401R_P4S01 = pd.read_excel("R1401.xlsx", sheet_name='R1401P4S01')
Year401R_P4S02 = pd.read_excel("R1401.xlsx", sheet_name='R1401P4S02')
Year401R_P4S03 = pd.read_excel("R1401.xlsx", sheet_name='R1401P4S03')
Year401U_P4S01 = pd.read_excel("U1401.xlsx", sheet_name='U1401P4S01')
Year401U_P4S02 = pd.read_excel("U1401.xlsx", sheet_name='U1401P4S02')
Year401U_P4S03 = pd.read_excel("U1401.xlsx", sheet_name='U1401P4S03')

Year98 = pd.concat([Year98R, Year98U], ignore_index=True)
Year99 = pd.concat([Year99R, Year99U], ignore_index=True)
Year400 = pd.concat([Year400R, Year400U], ignore_index=True)
Year401 = pd.concat([Year401R, Year401U], ignore_index=True)

Year98_P4S01 = pd.concat([Year98R_P4S01, Year98U_P4S01], ignore_index=True)
Year98_P4S02 = pd.concat([Year98R_P4S02, Year98U_P4S02], ignore_index=True)
Year98_P4S03 = pd.concat([Year98R_P4S03, Year98U_P4S03], ignore_index=True)

Year99_P4S01 = pd.concat([Year99R_P4S01, Year99U_P4S01], ignore_index=True)
Year99_P4S02 = pd.concat([Year99R_P4S02, Year99U_P4S02], ignore_index=True)
Year99_P4S03 = pd.concat([Year99R_P4S03, Year99U_P4S03], ignore_index=True)

Year400_P4S01 = pd.concat([Year400R_P4S01, Year400U_P4S01], ignore_index=True)
Year400_P4S02 = pd.concat([Year400R_P4S02, Year400U_P4S02], ignore_index=True)
Year400_P4S03 = pd.concat([Year400R_P4S03, Year400U_P4S03], ignore_index=True)

Year401_P4S01 = pd.concat([Year401R_P4S01, Year401U_P4S01], ignore_index=True)
Year401_P4S02 = pd.concat([Year401R_P4S02, Year401U_P4S02], ignore_index=True)
Year401_P4S03 = pd.concat([Year401R_P4S03, Year401U_P4S03], ignore_index=True)


df_P4S01=pd.concat([Year98_P4S01, Year99_P4S01,Year400_P4S01,Year401_P4S01], ignore_index=True)
df_P4S02=pd.concat([Year98_P4S02, Year99_P4S02,Year400_P4S02,Year401_P4S02], ignore_index=True)
df_P4S03=pd.concat([Year98_P4S03, Year99_P4S03,Year400_P4S03,Year401_P4S03], ignore_index=True)

df_P4S03

dfg = pd.concat([Year98, Year99, Year400, Year401], ignore_index=True)

df = pd.concat([df_P4S01, df_P4S02, df_P4S03], ignore_index=True)

df = df[['netincome_w_y', 'income_s_y', 'income_pension', 'income_rent', 'income_interest', 'income_aid', 'income_resale']]
dfg = dfg[['degree']]

df = pd.concat([dfg, df], axis=1)

for column in ['netincome_w_y', 'income_s_y', 'income_pension', 'income_rent', 'income_interest', 'income_aid', 'income_resale']:
  df[column] = pd.to_numeric(df[column], errors='coerce')
  median_value = df[column].mean()
  df[column].fillna(0, inplace=True)

df['degree'].fillna('No University', inplace=True)

df.info()

university_degrees = ['College', 'Bachelor', 'Master', 'PhD']
non_university_degrees = ['No University','Elemantry', 'Secondary', 'HighSchool', 'Diploma']

df_university = df[df['degree'].isin(university_degrees)].copy()
df_non_university = df[df['degree'].isin(non_university_degrees)].copy()

df_university['total_income'] = df_university[['netincome_w_y', 'income_s_y', 'income_pension',
                                               'income_rent', 'income_interest', 'income_aid',
                                               'income_resale']].sum(axis=1)

df_non_university['total_income'] = df_non_university[['netincome_w_y', 'income_s_y', 'income_pension',
                                                       'income_rent', 'income_interest', 'income_aid',
                                                       'income_resale']].sum(axis=1)

import matplotlib.pyplot as plt

avg_income_uni = df_university.groupby('degree')['total_income'].mean()
avg_income_no_uni = df_non_university.groupby('degree')['total_income'].mean()

plt.figure(figsize=(12, 6))

plt.bar(avg_income_uni.index, avg_income_uni.values, label='University Degrees', color='skyblue')
plt.bar(avg_income_no_uni.index, avg_income_no_uni.values, label='Non-University Degrees', color='lightcoral')

plt.xlabel('Degree')
plt.ylabel('Average Total Income')
plt.title('Average Total Income by Degree')
plt.xticks(rotation=45, ha='right')

plt.legend(loc='upper center', bbox_to_anchor=(0.5, -0.15), ncol=3, frameon=False)

plt.tight_layout()
plt.show()

from scipy.stats import mannwhitneyu

stat, p_value = mannwhitneyu(df_university['total_income'],df_non_university['total_income'],alternative='two-sided',method='auto')
print(f"U statistic: {stat}")
print(f"P-value: {p_value}")

if p_value < 0.05:
    print("There is a significant difference in total income between those who attended university and those who did not.")
else:
    print("There is no significant difference in total income between those who attended university and those who did not.")

median_univ = df_university['total_income'].median()
median_non_univ = df_non_university['total_income'].median()

print(f"Median Income - University: {median_univ}")
print(f"Median Income - Non-University: {median_non_univ}")

"""### The Mann-Whitney U test results show a statistically significant difference in total income between individuals who attended university and those who did not (U statistic: 13,602,589,226.5, P-value: 2.89 × 10⁻⁷¹). Interestingly, the median income for those who did not attend university (21,000,000.0) is higher than for those who did attend university (12,300,000.0). This indicates that, in this dataset, individuals without a university education have a higher median income than university graduates. Therefore, while there is a significant difference in total income between the two groups, it is the non-university group that has the higher median income in this case.

** *********************************************** **
"""